name: Python package

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - '.pre-commit-config.yaml'
  pull_request:
  release:
    types:
      - published

jobs:
  test:
    strategy:
      matrix:
        os: ["windows-latest", "ubuntu-20.04", "macos-latest"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install -r requirements-build.txt
        python -m pip install -r requirements-dev.txt
    - name: Build
      run: |
        python setup.py build_ext --inplace
    - name: Run tests
      run: |
        python -m unittest discover -v tests "*.py"

  build-wheels:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: test

    strategy:
      matrix:
        os: ["ubuntu-20.04", "macos-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools wheel cibuildwheel
    - name: Build
      run: |
        python -m cibuildwheel
    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  build-sdist:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: test

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools Cython==3.0.0a11
    - name: Build dists
      run: |
        python setup.py sdist
    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  upload-pypi:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build-wheels, build-sdist]

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
